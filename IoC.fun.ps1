
function Write-Business-IoC {
    
    $Ns = Get-Qualified-Namespace -LocalNameSpace ($SolutionName + '.Infrastructure.Business.Services')
    
    Push-And-Ensure 'Services'

        $t = [char]9
    
        $File = Join-Path -Path (Get-Location) -ChildPath 'IoCConf.cs'
        if (-not (Test-Path -Path $File -PathType Leaf))
        {
            ('using Microsoft.Extensions.Configuration;') | Out-File -FilePath $File
            ('using Microsoft.Extensions.DependencyInjection;') | Out-File -FilePath $File -Append
            ('') | Out-File -FilePath $File -Append
            ('namespace ' + $Ns) | Out-File -FilePath $File -Append
            ('{') | Out-File -FilePath $File -Append
                ($t + 'public static class IoCConf') | Out-File -FilePath $File -Append
                ($t + '{') | Out-File -FilePath $File -Append
                    ($t + $t + 'public static IServiceCollection AddBusinessServices(this IServiceCollection services, IConfiguration configuration)') | Out-File -FilePath $File -Append
                    ($t + $t + '{') | Out-File -FilePath $File -Append
                        (($t + $t + $t + 'services.AddApiServices();') | Out-File -FilePath $File -Append) | Out-File -FilePath $File -Append
                        ($t + $t + $t + 'return services;') | Out-File -FilePath $File -Append
                    ($t + $t + '}') | Out-File -FilePath $File -Append
                ($t + '}') | Out-File -FilePath $File -Append
            ('}') | Out-File -FilePath $File -Append
        }

        $File = Join-Path -Path (Get-Location) -ChildPath 'InternalIoCConf.cs'

        $ViewControllerNs = Get-Qualified-Namespace -LocalNameSpace ($SolutionName + '.Infrastructure.Business.ViewController')
        $ApiNs = Get-Qualified-Namespace -LocalNameSpace ($SolutionName + '.Specification.Business.ViewController')
        ('// Do not edit this file, it is generated every time codeascode script is run!') | Out-File -FilePath $File
        ('// Add implemention specific services in the IoCConf file') | Out-File -FilePath $File -Append
        ('using ' + $ApiNs + ';') | Out-File -FilePath $File -Append
        ('using ' + $ViewControllerNs + ';') | Out-File -FilePath $File -Append 
        ('using Microsoft.Extensions.DependencyInjection;') | Out-File -FilePath $File -Append
        ('') | Out-File -FilePath $File -Append
        ('namespace ' + $Ns) | Out-File -FilePath $File -Append
        ('{') | Out-File -FilePath $File -Append
            ($t + 'internal static class InternalIoCConf') | Out-File -FilePath $File -Append
            ($t + '{') | Out-File -FilePath $File -Append
                ($t + $t + 'internal static IServiceCollection AddApiServices(this IServiceCollection services)') | Out-File -FilePath $File -Append
                ($t + $t + '{') | Out-File -FilePath $File -Append
                    foreach ($Name in $Properties.Types)
                    {
                        ($t + $t + $t + 'services.AddSingleton<I' + $Name + 'ViewController, ' + $Name + 'ViewController>();') | Out-File -FilePath $File -Append
                    }
                    ($t + $t + $t + 'return services;') | Out-File -FilePath $File -Append
                ($t + $t + '}') | Out-File -FilePath $File -Append
            ($t + '}') | Out-File -FilePath $File -Append
        ('}') | Out-File -FilePath $File -Append

    Pop-Location # Config
}

function Write-Application-IoC {
    param (
        $Ns,
        $ApiTier,
        $ApiTierType
    )
    
    $Ns = Get-Qualified-Namespace -LocalNameSpace ($Ns + '.Services')

    Push-And-Ensure -Name 'Services'

        $t = [char]9

        $File = Join-Path -Path (Get-Location) -ChildPath 'IoCConf.cs'
        if (-not (Test-Path -Path $File -PathType Leaf)) {
            if ($ApiTierType) {
                $LocalApiNs = ($SolutionName + ".Infrastructure." + $ApiTier + '.' + $ApiTierType + '.Services')
            }
            else {
                $LocalApiNs = ($SolutionName + ".Infrastructure." + $ApiTier + '.Services')
            }
            
            $ApiServicesNs = (Get-Qualified-Namespace -LocalNameSpace $LocalApiNs)

            ('using ' + $ApiServicesNs + ';') | Out-File -FilePath $File -Append
            #('using Microsoft.Extensions.Configuration;') | Out-File -FilePath $File -Append
            #('using Microsoft.Extensions.DependencyInjection;') | Out-File -FilePath $File -Append
            ('') | Out-File -FilePath $File -Append
            ('namespace ' + $Ns) | Out-File -FilePath $File -Append
            ('{') | Out-File -FilePath $File -Append
                ($t + 'public static class IoCConf') | Out-File -FilePath $File -Append
                ($t + '{') | Out-File -FilePath $File -Append
                    ($t + $t + 'public static IServiceCollection AddApplicationServices(this IServiceCollection services, IConfiguration configuration)') | Out-File -FilePath $File -Append
                    ($t + $t + '{') | Out-File -FilePath $File -Append

                        $ApiServicesMethod = ("Add" + $ApiTierType + $ApiTier + "Services")
                        ($t + $t + $t + 'services.' + $ApiServicesMethod + '(configuration);') | Out-File -FilePath $File -Append            

                        ($t + $t + $t + 'return services;') | Out-File -FilePath $File -Append
                    ($t + $t + '}') | Out-File -FilePath $File -Append
                ($t + '}') | Out-File -FilePath $File -Append
            ('}') | Out-File -FilePath $File -Append
        }

    Pop-Location # Services
}

function Write-Api-IoC {
    param (
        $Ns,
        $Tier,
        $Type,
        [switch] $UseHttp
    )

    $Ns = Get-Qualified-Namespace -LocalNameSpace ($Ns + '.Services')
    
    Push-And-Ensure 'Services'

        $t = [char]9
    
        $File = Join-Path -Path (Get-Location) -ChildPath 'IoCConf.cs'
        if (-not (Test-Path -Path $File -PathType Leaf))
        {
            ('using Microsoft.Extensions.Configuration;') | Out-File -FilePath $File
            ('using Microsoft.Extensions.DependencyInjection;') | Out-File -FilePath $File -Append
            ('') | Out-File -FilePath $File -Append
            ('namespace ' + $Ns) | Out-File -FilePath $File -Append
            ('{') | Out-File -FilePath $File -Append
                ($t + 'public static class IoCConf') | Out-File -FilePath $File -Append
                ($t + '{') | Out-File -FilePath $File -Append
                    ($t + $t + 'public static IServiceCollection Add' + $Type + $Tier + 'Services(this IServiceCollection services, IConfiguration configuration)') | Out-File -FilePath $File -Append
                    ($t + $t + '{') | Out-File -FilePath $File -Append
                        if ($UseHttp)
                        {
                            (($t + $t + $t + 'services.AddHttpClient();') | Out-File -FilePath $File -Append) | Out-File -FilePath $File -Append
                        }
                        (($t + $t + $t + 'services.AddApiServices();') | Out-File -FilePath $File -Append) | Out-File -FilePath $File -Append
                        ($t + $t + $t + 'return services;') | Out-File -FilePath $File -Append
                    ($t + $t + '}') | Out-File -FilePath $File -Append
                ($t + '}') | Out-File -FilePath $File -Append
            ('}') | Out-File -FilePath $File -Append
        }

        $File = Join-Path -Path (Get-Location) -ChildPath 'InternalIoCConf.cs'

        $ApiNs = Get-Qualified-Namespace -LocalNameSpace ($SolutionName + '.Specification.Api.' + $Tier)
        ('// Do not edit this file, it is generated every time codeascode script is run!') | Out-File -FilePath $File
        ('// Add implemention specific services in the IoCConf file') | Out-File -FilePath $File -Append
        ('using ' + $ApiNs + ';') | Out-File -FilePath $File -Append
        ('using Microsoft.Extensions.DependencyInjection;') | Out-File -FilePath $File -Append
        ('') | Out-File -FilePath $File -Append
        ('namespace ' + $Ns) | Out-File -FilePath $File -Append
        ('{') | Out-File -FilePath $File -Append
            ($t + 'internal static class InternalIoCConf') | Out-File -FilePath $File -Append
            ($t + '{') | Out-File -FilePath $File -Append
                ($t + $t + 'internal static IServiceCollection AddApiServices(this IServiceCollection services)') | Out-File -FilePath $File -Append
                ($t + $t + '{') | Out-File -FilePath $File -Append
                    foreach ($Name in $Properties.Types)
                    {
                        ($t + $t + $t + 'services.AddSingleton<I' + $Name + $Tier + ', ' + $Name + $Type + $Tier + '>();') | Out-File -FilePath $File -Append
                    }
                    ($t + $t + $t + 'return services;') | Out-File -FilePath $File -Append
                ($t + $t + '}') | Out-File -FilePath $File -Append
            ($t + '}') | Out-File -FilePath $File -Append
        ('}') | Out-File -FilePath $File -Append

    Pop-Location # Config
}
